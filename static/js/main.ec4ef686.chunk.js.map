{"version":3,"sources":["components/table2.js","components/table1.js","components/tablayout.js","components/main.js","App.js","reportWebVitals.js","index.js"],"names":["MuiVirtualizedTable","getRowClassName","index","props","classes","onRowClick","clsx","tableRow","flexContainer","tableRowHover","cellRenderer","cellData","columnIndex","columns","rowHeight","TableCell","component","className","tableCell","noClick","variant","style","height","align","numeric","headerRenderer","label","headerHeight","this","tableProps","width","gridStyle","direction","table","rowClassName","map","dataKey","other","headerProps","React","PureComponent","defaultProps","VirtualizedTable","withStyles","theme","display","alignItems","boxSizing","flip","paddingRight","undefined","cursor","backgroundColor","palette","grey","flex","sample","createData","id","dealer","devices","contact","email","commission","rows","i","randomSelection","Math","floor","random","length","push","Table2","Paper","padding","rowCount","rowGetter","Table1","useStyles","makeStyles","root","flexGrow","tabRoot","minWidth","maxWidth","Tablay","useState","value","setValue","TabContext","AppBar","position","color","TabList","onChange","event","newValue","Tab","TabPanel","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec4ef686.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { AutoSizer, Column, Table } from 'react-virtualized';\r\n\r\n\r\nconst styles = (theme) => ({\r\n  flexContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    boxSizing: 'border-box',\r\n  },\r\n  table: {\r\n \r\n    '& .ReactVirtualized__Table__headerRow': {\r\n      flip: false,\r\n      paddingRight: theme.direction === 'rtl' ? '0 !important' : undefined,\r\n    },\r\n  },\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n  },\r\n  tableRowHover: {\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.grey[200],\r\n    },\r\n  },\r\n  tableCell: {\r\n    flex: 1,\r\n  },\r\n  noClick: {\r\n    cursor: 'initial',\r\n  },\r\n});\r\n\r\nclass MuiVirtualizedTable extends React.PureComponent {\r\n  static defaultProps = {\r\n    headerHeight: 48,\r\n    rowHeight: 48,\r\n  };\r\n\r\n  getRowClassName = ({ index }) => {\r\n    const { classes, onRowClick } = this.props;\r\n\r\n    return clsx(classes.tableRow, classes.flexContainer, {\r\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\r\n    });\r\n  };\r\n\r\n  cellRenderer = ({ cellData, columnIndex }) => {\r\n    const { columns, classes, rowHeight, onRowClick } = this.props;\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, {\r\n          [classes.noClick]: onRowClick == null,\r\n        })}\r\n        variant=\"body\"\r\n        style={{ height: rowHeight }}\r\n        align={(columnIndex != null && columns[columnIndex].numeric) || false ? 'right' : 'left'}\r\n      >\r\n        {cellData}\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  headerRenderer = ({ label, columnIndex }) => {\r\n    const { headerHeight, columns, classes } = this.props;\r\n\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\r\n        variant=\"head\"\r\n        style={{ height: headerHeight }}\r\n        align={columns[columnIndex].numeric || false ? 'right' : 'left'}\r\n      >\r\n        <span>{label}</span>\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes, columns, rowHeight, headerHeight, ...tableProps } = this.props;\r\n    return (\r\n      <AutoSizer>\r\n        {({ height, width }) => (\r\n          <Table\r\n            height={height}\r\n            width={width}\r\n            rowHeight={rowHeight}\r\n            gridStyle={{\r\n              direction: 'inherit',\r\n            }}\r\n            headerHeight={headerHeight}\r\n            className={classes.table}\r\n            {...tableProps}\r\n            rowClassName={this.getRowClassName}\r\n          >\r\n            {columns.map(({ dataKey, ...other }, index) => {\r\n              return (\r\n                <Column\r\n                  key={dataKey}\r\n                  headerRenderer={(headerProps) =>\r\n                    this.headerRenderer({\r\n                      ...headerProps,\r\n                      columnIndex: index,\r\n                    })\r\n                  }\r\n                  className={classes.flexContainer}\r\n                  cellRenderer={this.cellRenderer}\r\n                  dataKey={dataKey}\r\n                  {...other}\r\n                />\r\n              );\r\n            })}\r\n          </Table>\r\n        )}\r\n      </AutoSizer>\r\n    );\r\n  }\r\n}\r\n\r\nMuiVirtualizedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  columns: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      dataKey: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      numeric: PropTypes.bool,\r\n      width: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  headerHeight: PropTypes.number,\r\n  onRowClick: PropTypes.func,\r\n  rowHeight: PropTypes.number,\r\n};\r\n\r\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\r\n\r\nconst sample = [\r\n  ['Sheikh Jabir', 159, 6.0, 24, 4.0],\r\n  ['Abid A. Sobhan', 237, 9.0, 37, 4.3],\r\n  ['Nipom Chowdhury', 262, 16.0, 24, 6.0],\r\n  ['Mahbub Hassan', 305, 3.7, 67, 4.3],\r\n  ['Julfikar Ali-Vutta', 356, 16.0, 49, 3.9],\r\n];\r\n\r\nfunction createData(id, dealer, devices, contact, email, commission) {\r\n  return { id, dealer, devices, contact, email, commission };\r\n}\r\n\r\nconst rows = [];\r\n\r\nfor (let i = 0; i < 200; i += 1) {\r\n  const randomSelection = sample[Math.floor(Math.random() * sample.length)];\r\n  rows.push(createData(i, ...randomSelection));\r\n\r\n\r\n}\r\nconst Table2 = () => {\r\n \r\n\r\n  return (\r\n\r\n    \r\n    <Paper style={{ height: 575, width: '100%' , padding:5}}>\r\n      <VirtualizedTable\r\n        \r\n        rowCount={rows.length}  \r\n        rowGetter={({ index }) => rows[index]}\r\n        columns={[\r\n          {\r\n            width: 870,\r\n            label: 'Dealer',\r\n            dataKey: 'dealer',\r\n          },\r\n          {\r\n            width: 400,\r\n            label: 'Devices',\r\n            dataKey: 'devices',\r\n            numeric: true,\r\n          },\r\n          {\r\n            width: 400,\r\n            label: 'Contact',\r\n            dataKey: 'contact',\r\n            numeric: true,\r\n          },\r\n          {\r\n            width: 400,\r\n            label: 'E-mail',\r\n            dataKey: 'email',\r\n            numeric: true,\r\n          },\r\n          {\r\n            width: 400,\r\n            label: 'Commission',\r\n            dataKey: 'commission',\r\n            numeric: true,\r\n          },\r\n        ]}\r\n      >\r\n        \r\n</VirtualizedTable>\r\n\r\n    </Paper>\r\n  );\r\n\r\n      }\r\n  export default Table2;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { AutoSizer, Column, Table } from 'react-virtualized';\r\n\r\n\r\nconst styles = (theme) => ({\r\n  flexContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    boxSizing: 'border-box',\r\n  },\r\n  table: {\r\n \r\n    '& .ReactVirtualized__Table__headerRow': {\r\n      flip: false,\r\n      paddingRight: theme.direction === 'rtl' ? '0 !important' : undefined,\r\n    },\r\n  },\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n  },\r\n  tableRowHover: {\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.grey[200],\r\n    },\r\n  },\r\n  tableCell: {\r\n    flex: 1,\r\n  },\r\n  noClick: {\r\n    cursor: 'initial',\r\n  },\r\n});\r\n\r\nclass MuiVirtualizedTable extends React.PureComponent {\r\n  static defaultProps = {\r\n    headerHeight: 48,\r\n    rowHeight: 48,\r\n  };\r\n\r\n  getRowClassName = ({ index }) => {\r\n    const { classes, onRowClick } = this.props;\r\n\r\n    return clsx(classes.tableRow, classes.flexContainer, {\r\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\r\n    });\r\n  };\r\n\r\n  cellRenderer = ({ cellData, columnIndex }) => {\r\n    const { columns, classes, rowHeight, onRowClick } = this.props;\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, {\r\n          [classes.noClick]: onRowClick == null,\r\n        })}\r\n        variant=\"body\"\r\n        style={{ height: rowHeight }}\r\n        align={(columnIndex != null && columns[columnIndex].numeric) || false ? 'right' : 'left'}\r\n      >\r\n        {cellData}\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  headerRenderer = ({ label, columnIndex }) => {\r\n    const { headerHeight, columns, classes } = this.props;\r\n\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\r\n        variant=\"head\"\r\n        style={{ height: headerHeight }}\r\n        align={columns[columnIndex].numeric || false ? 'right' : 'left'}\r\n      >\r\n        <span>{label}</span>\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes, columns, rowHeight, headerHeight, ...tableProps } = this.props;\r\n    return (\r\n      <AutoSizer>\r\n        {({ height, width }) => (\r\n          <Table\r\n            height={height}\r\n            width={width}\r\n            rowHeight={rowHeight}\r\n            gridStyle={{\r\n              direction: 'inherit',\r\n            }}\r\n            headerHeight={headerHeight}\r\n            className={classes.table}\r\n            {...tableProps}\r\n            rowClassName={this.getRowClassName}\r\n          >\r\n            {columns.map(({ dataKey, ...other }, index) => {\r\n              return (\r\n                <Column\r\n                  key={dataKey}\r\n                  headerRenderer={(headerProps) =>\r\n                    this.headerRenderer({\r\n                      ...headerProps,\r\n                      columnIndex: index,\r\n                    })\r\n                  }\r\n                  className={classes.flexContainer}\r\n                  cellRenderer={this.cellRenderer}\r\n                  dataKey={dataKey}\r\n                  {...other}\r\n                />\r\n              );\r\n            })}\r\n          </Table>\r\n        )}\r\n      </AutoSizer>\r\n    );\r\n  }\r\n}\r\n\r\nMuiVirtualizedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  columns: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      dataKey: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      numeric: PropTypes.bool,\r\n      width: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  headerHeight: PropTypes.number,\r\n  onRowClick: PropTypes.func,\r\n  rowHeight: PropTypes.number,\r\n};\r\n\r\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\r\n\r\nconst sample = [\r\n  ['Sheikh Jabir', 159, 6.0],\r\n  ['Abid A. Sobhan', 237, 9.0],\r\n  ['Nipom Chowdhury', 262, 16.0],\r\n  ['Mahbub Hassan', 305, 3.7],\r\n  ['Julfikar Ali-Vutta', 356, 16.0],\r\n];\r\n\r\nfunction createData(id, dealer, contact, email) {\r\n  return { id, dealer, contact, email };\r\n}\r\n\r\nconst rows = [];\r\n\r\nfor (let i = 0; i < 200; i += 1) {\r\n  const randomSelection = sample[Math.floor(Math.random() * sample.length)];\r\n  rows.push(createData(i, ...randomSelection));\r\n\r\n\r\n}\r\nconst Table1 = () => {\r\n \r\n\r\n  return (\r\n\r\n    \r\n    <Paper style={{ height: 575, width: '100%' , padding:5}}>\r\n      <VirtualizedTable\r\n        \r\n        rowCount={rows.length}  \r\n        rowGetter={({ index }) => rows[index]}\r\n        columns={[\r\n          {\r\n            width: 870,\r\n            label: 'Dealer',\r\n            dataKey: 'dealer',\r\n          },\r\n          {\r\n            width: 400,\r\n            label: 'Contact',\r\n            dataKey: 'contact',\r\n            numeric: true,\r\n          },\r\n          {\r\n            width: 400,\r\n            label: 'E-mail',\r\n            dataKey: 'email',\r\n            numeric: true,\r\n          },\r\n          \r\n        ]}\r\n      >\r\n        \r\n</VirtualizedTable>\r\n\r\n    </Paper>\r\n  );\r\n\r\n      }\r\n  export default Table1;\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabContext from '@material-ui/lab/TabContext';\r\nimport TabList from '@material-ui/lab/TabList';\r\nimport TabPanel from '@material-ui/lab/TabPanel';\r\nimport Table2 from './table2';\r\nimport Table1 from './table1';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  tabRoot:{\r\n    minWidth:\"50%\",\r\n    maxWidth:\"50%\"\r\n  }\r\n  \r\n});\r\n\r\nconst Tablay =()=>{\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState();\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TabContext value={value}>\r\n        <AppBar position=\"static\" style={{color:\"orange\", backgroundColor:\"black\"}}>\r\n          <TabList onChange={handleChange} >\r\n            <Tab label=\"Pending\" value=\"1\"  classes={{root:classes.tabRoot}}/>\r\n            <Tab label=\"Approved\" value=\"2\"  classes={{root:classes.tabRoot}}/>\r\n          </TabList>\r\n        </AppBar>\r\n        <TabPanel value=\"1\"><Table1/></TabPanel>\r\n        <TabPanel value=\"2\"><Table2/></TabPanel>\r\n      </TabContext>\r\n    </div>\r\n  );\r\n}\r\nexport default Tablay;\r\n","import React from 'react';\r\nimport Tablay from './tablayout';\r\n\r\n\r\nconst Main = () => {\r\n    return ( \r\n        <div>\r\n            <Tablay/>\r\n         \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Main;","import './App.css';\nimport Main from './components/main';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}